---
- ansible.builtin.file:
    path: ~/.bashrc.d
    state: directory
    mode: 0750

- ansible.builtin.template:
    src: templates/.bashrc.d/aliases.j2
    dest: ~/.bashrc.d/aliases
    mode: 0640

- ansible.builtin.file:
    path: ~/.local/share/bash-completion/completions
    state: directory
    mode: 0750

- name: Generate bash completions
  ansible.builtin.shell: >-
    {{ item }} completion bash > ~/.local/share/bash-completion/completions/{{ item }}
  loop: >-
    {{ bash_completions | default([]) }}

- name: dotnet bash completions
  ansible.builtin.copy:
    content: |-
      # bash parameter completion for the dotnet CLI

      function _dotnet_bash_complete()
      {
        local cur="${COMP_WORDS[COMP_CWORD]}" IFS=$'\n' # On Windows you may need to use use IFS=$'\r\n'
        local candidates

        read -d '' -ra candidates < <(dotnet complete --position "${COMP_POINT}" "${COMP_LINE}" 2>/dev/null)

        read -d '' -ra COMPREPLY < <(compgen -W "${candidates[*]:-}" -- "$cur")
      }

      complete -f -F _dotnet_bash_complete dotnet
    dest: ~/.local/share/bash-completion/completions/dotnet
  when: install_dotnet

- name: export EDITOR
  ansible.builtin.copy:
    content: |-
      export EDITOR="code --new-window --wait"
    dest: ~/.bashrc.d/editor
    mode: 0640

- name: export KUBE_EDITOR
  ansible.builtin.copy:
    content: |-
      export KUBE_EDITOR="nano"
    dest: ~/.bashrc.d/kube_editor
    mode: 0640

- name: oh-my-posh
  ansible.builtin.copy:
    content: |-
      eval "$(oh-my-posh init bash --config ~/.config/theme.omp.json)"
    dest: ~/.bashrc.d/oh-my-posh
    mode: 0640
