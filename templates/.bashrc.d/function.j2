kcu() {
    unset KUBECONFIG
}

kc() {
    if [ -z "$1" ]; then
        echo "Usage: kc <context>"
        return 1
    fi
    export KUBECONFIG=$HOME/.kube/$1
    if ! test -f $HOME/.kube/$1; then
        echo "Kubeconfig file $HOME/.kube/$1 does not exist."
        return 1
    fi
    kubectl config use-context $1
}

{% for item in k3s | default([]) %}
kc{{ item.name | lower }}() {
    export KUBECONFIG=$HOME/.kube/{{ item.name | lower }}
    if ! test -f $HOME/.kube/{{ item.name | lower }}; then
        ssh {{ item.host }} "sudo cat /etc/rancher/k3s/k3s.yaml" >$HOME/.kube/{{ item.name | lower }}
        chmod 600 $HOME/.kube/{{ item.name | lower }}
        yq -i '.clusters[].cluster.server |= "https://{{ item.host }}:6443"' $HOME/.kube/{{ item.name | lower }}
        yq -i '.contexts[].name |= "{{ item.name | lower }}"' $HOME/.kube/{{ item.name | lower }}
        yq -i '.current-context |= "{{ item.name | lower }}"' $HOME/.kube/{{ item.name | lower }}
    fi
}
{% endfor %}

if command -v az &>/dev/null; then
    azl() {
        az login --output none
    }

    azk() {
        subscription="$1"
        resource_group="$2"
        name="$3"
        kubeconfig="$4"
        if [ -z "$subscription" ] || [ -z "$resource_group" ] || [ -z "$name" ] || [ -z "$kubeconfig" ]; then
            echo "Usage: azk <subscription> <resource_group> <name> <kubeconfig>"
            return 1
        fi
        az account set --subscription $subscription
        az aks get-credentials --resource-group $resource_group --name $name --file $HOME/.kube/$kubeconfig --overwrite-existing
        az-kubelogin convert-kubeconfig -l azurecli --kubeconfig $HOME/.kube/$kubeconfig
        yq -i '.users[].user.exec.command |= "az-kubelogin"' $HOME/.kube/$kubeconfig
    }
fi

ccc() {
    unset KUBECONFIG

    if command -v az &>/dev/null; then
        az logout
    fi

    if command -v az-kubelogin &>/dev/null; then
        az-kubelogin remove-cache-dir
        az-kubelogin remove-cache-dir --cache-dir /mnt/c/Users/$USER/.kube/cache/kubelogin
    fi

    if command -v docker &>/dev/null; then
        docker logout all
    fi
}
