plugins:
  # Manage cert-manager Certificate resources via cmctl.
  # See: https://github.com/cert-manager/cmctl
  cert-status:
    shortCut: Shift-S
    confirm: false
    description: Certificate status
    scopes:
      - certificates
    command: bash
    background: false
    args:
      - -c
      - "cmctl status certificate --context $CONTEXT -n $NAMESPACE $NAME |& less"
  cert-renew:
    shortCut: Shift-R
    confirm: false
    description: Certificate renew
    scopes:
      - certificates
    command: bash
    background: false
    args:
      - -c
      - "cmctl renew --context $CONTEXT -n $NAMESPACE $NAME |& less"
  secret-inspect:
    shortCut: Shift-I
    confirm: false
    description: Inspect secret
    scopes:
      - secrets
    command: bash
    background: false
    args:
      - -c
      - "cmctl inspect secret --context $CONTEXT -n $NAMESPACE $NAME |& less"
  # $HOME/.k9s/plugin.yml
  # move selected line to chosen resource in K9s, then:
  # Shift-T (with confirmation) to toggle helm releases or kustomizations suspend and resume
  # Shift-R (no confirmation) to reconcile a git source or a helm release or a kustomization
  toggle-helmrelease:
    shortCut: Shift-T
    confirm: true
    scopes:
      - helmreleases
    description: Toggle to suspend or resume a HelmRelease
    command: bash
    background: false
    args:
      - -c
      - >-
        suspended=$(kubectl --context $CONTEXT get helmreleases -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1);
        verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend");
        flux
        $verb helmrelease
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  toggle-kustomization:
    shortCut: Shift-T
    confirm: true
    scopes:
      - kustomizations
    description: Toggle to suspend or resume a Kustomization
    command: bash
    background: false
    args:
      - -c
      - >-
        suspended=$(kubectl --context $CONTEXT get kustomizations -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1);
        verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend");
        flux
        $verb kustomization
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-git:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - gitrepositories
    command: bash
    background: false
    args:
      - -c
      - >-
        flux
        reconcile source git
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-hr:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - helmreleases
    command: bash
    background: false
    args:
      - -c
      - >-
        flux
        reconcile helmrelease
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-helm-repo:
    shortCut: Shift-Z
    description: Flux reconcile
    scopes:
      - helmrepositories
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - >-
        flux
        reconcile source helm
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-oci-repo:
    shortCut: Shift-Z
    description: Flux reconcile
    scopes:
      - ocirepositories
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - >-
        flux
        reconcile source oci
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-ks:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - kustomizations
    command: bash
    background: false
    args:
      - -c
      - >-
        flux
        reconcile kustomization
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-ir:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - imagerepositories
    command: sh
    background: false
    args:
      - -c
      - >-
        flux
        reconcile image repository
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  reconcile-iua:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - imageupdateautomations
    command: sh
    background: false
    args:
      - -c
      - >-
        flux
        reconcile image update
        --context $CONTEXT
        -n $NAMESPACE $NAME
        | less -K
  # credits: https://github.com/fluxcd/flux2/discussions/2494
  get-suspended-helmreleases:
    shortCut: Shift-S
    confirm: false
    description: Suspended Helm Releases
    scopes:
      - helmrelease
    command: sh
    background: false
    args:
      - -c
      - >-
        kubectl get
        --context $CONTEXT
        --all-namespaces
        helmreleases.helm.toolkit.fluxcd.io -o json
        | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.namespace,.metadata.name,.spec.suspend] | @tsv'
        | less -K
  get-suspended-kustomizations:
    shortCut: Shift-S
    confirm: false
    description: Suspended Kustomizations
    scopes:
      - kustomizations
    command: sh
    background: false
    args:
      - -c
      - >-
        kubectl get
        --context $CONTEXT
        --all-namespaces
        kustomizations.kustomize.toolkit.fluxcd.io -o json
        | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.name,.spec.suspend] | @tsv'
        | less -K
  # Suspends/Resumes a cronjob
  toggleCronjob:
    shortCut: Ctrl-S
    confirm: true
    dangerous: true
    scopes:
      - cj
    description: Toggle to suspend or resume a running cronjob
    command: kubectl
    background: true
    args:
      - patch
      - cronjobs
      - $NAME
      - -n
      - $NAMESPACE
      - --context
      - $CONTEXT
      - -p
      - '{"spec" : {"suspend" : $!COL-SUSPEND }}'
  # Sends logs over to jq for processing. This leverages kubectl plugin kubectl-jq.
  jqlogs:
    shortCut: Ctrl-J
    confirm: false
    description: "Logs (jq)"
    scopes:
      - po
    command: kubectl
    background: false
    args:
      - jq
      - $NAME
      - $NAMESPACE
      - $CONTEXT
  node-root-shell:
    shortCut: a
    description: Run root shell on node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        host="$1"
        json='
        {
          "apiVersion": "v1",
          "spec": {
            "hostIPC": true,
            "hostNetwork": true,
            "hostPID": true
        '
        if ! [[ -z "$host" ]]; then
          json+=",
          \"nodeSelector\" : {
            \"kubernetes.io/hostname\" : \"$host\"
          }
          ";
        fi
        json+='
          }
        }
        '
        kubectl run -ti --image ghcr.io/bschapendonk/hexapuma-diagnostics:main --rm --privileged --restart=Never --overrides="$json" root --command -- nsenter -t 1 -m -u -n -i -- bash -l
  # Inspect certificate chains with openssl.
  # See: https://github.com/openssl/openssl.
  secret-openssl-ca:
    shortCut: Ctrl-O
    confirm: false
    description: Openssl ca.crt
    scopes:
      - secrets
    command: bash
    background: false
    args:
      - -c
      - kubectl get secret --context $CONTEXT -n $NAMESPACE $NAME -o jsonpath='{.data.ca\.crt}' | base64 -d | openssl storeutl -noout -text -certs /dev/stdin |& less
  secret-openssl-tls:
    shortCut: Shift-O
    confirm: false
    description: Openssl tls.crt
    scopes:
      - secrets
    command: bash
    background: false
    args:
      - -c
      - kubectl get secret --context $CONTEXT -n $NAMESPACE $NAME -o jsonpath='{.data.tls\.crt}' | base64 -d | openssl storeutl -noout -text -certs /dev/stdin |& less
  # remove finalizers from a stuck namespace
  rm-ns:
    shortCut: n
    confirm: true
    dangerous: true
    description: Remove NS Finalizers
    scopes:
      - namespace
    command: sh
    background: false
    args:
      - -c
      - "kubectl get namespace $NAME -o json | jq '.spec.finalizers=[]' | kubectl replace --raw /api/v1/namespaces/$NAME/finalize -f - > /dev/null"
